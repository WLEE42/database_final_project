# -*- coding: utf-8 -*-
# Generated by Django 1.11.25 on 2019-12-23 09:29
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import library.managers
import uuid


class Migration(migrations.Migration):

    replaces = [('library', '0001_initial'), ('library', '0002_auto_20191221_0046'), ('library', '0003_auto_20191221_1929'), ('library', '0004_auto_20191221_2041')]

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uemail', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('uname', models.CharField(max_length=30, verbose_name='user name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', library.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('bid', models.AutoField(max_length=10, primary_key=True, serialize=False)),
                ('bname', models.CharField(max_length=10, verbose_name='书名')),
                ('bauthor', models.CharField(max_length=100, verbose_name='作者')),
                ('bpubtime', models.DateField(help_text='出版时间', verbose_name='出版时间')),
                ('bpubcomp', models.CharField(max_length=30, verbose_name='出版社')),
                ('bimage', models.ImageField(null=True, upload_to='photos/%Y/%m/%d', verbose_name='图书封面图')),
                ('bsummary', models.TextField(default='无描述', verbose_name='摘要')),
            ],
            options={
                'ordering': ['bname'],
            },
        ),
        migrations.CreateModel(
            name='Bookcopy',
            fields=[
                ('bcid', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular book across whole library', primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('m', 'Maintance'), ('o', 'On loan'), ('a', 'Available'), ('r', 'Reserved')], default='m', help_text='Book availability', max_length=1)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookcopy', to='library.Book')),
            ],
            options={
                'ordering': ['status'],
            },
        ),
        migrations.CreateModel(
            name='Borrow',
            fields=[
                ('boid', models.AutoField(max_length=15, primary_key=True, serialize=False)),
                ('lenddate', models.DateField(default=django.utils.timezone.now, verbose_name='借出时间')),
                ('returndate', models.DateField(default=django.utils.timezone.now, verbose_name='还书时间')),
                ('isfinished', models.BooleanField(default=False)),
                ('bookcopy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borrow', to='library.Bookcopy')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borrow', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-lenddate'],
                'get_latest_by': 'lenddate',
            },
        ),
        migrations.CreateModel(
            name='Penalty',
            fields=[
                ('pid', models.AutoField(max_length=10, primary_key=True, serialize=False)),
                ('pemoney', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('pedate', models.DateField(default=django.utils.timezone.now)),
                ('isfinished', models.BooleanField(default=False)),
                ('borrow', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='penalty', to='library.Borrow')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='penalty', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'pedate',
                'ordering': ['isfinished', 'pedate'],
            },
        ),
        migrations.CreateModel(
            name='Reserve',
            fields=[
                ('reid', models.AutoField(max_length=10, primary_key=True, serialize=False)),
                ('startdate', models.DateField(default=django.utils.timezone.now, verbose_name='预约开始计算的时间')),
                ('isbookavailable', models.BooleanField(default=False)),
                ('isfinished', models.BooleanField(default=False)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reserve', to='library.Book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reserve', to=settings.AUTH_USER_MODEL)),
                ('adddate', models.DateField(default=django.utils.timezone.now, verbose_name='添加预约的时间')),
            ],
            options={
                'get_latest_by': 'adddate',
                'ordering': ['-isbookavailable', 'adddate'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('rid', models.AutoField(max_length=4, primary_key=True, serialize=False, verbose_name='阅览室编号')),
                ('rpos', models.CharField(max_length=30, verbose_name='阅览室位置')),
                ('rname', models.CharField(max_length=30, verbose_name='阅览室名称')),
            ],
        ),
        migrations.AddField(
            model_name='bookcopy',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bookcopy', to='library.Room'),
        ),
        migrations.AlterField(
            model_name='bookcopy',
            name='bcid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for this particular book across whole library', primary_key=True, serialize=False),
        ),
        migrations.AlterModelOptions(
            name='borrow',
            options={'get_latest_by': 'lenddate', 'ordering': ['isfinished', '-lenddate']},
        ),
    ]
