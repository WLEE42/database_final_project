--
-- Create model User
--
CREATE TABLE "LIBRARY_USER"
(
    "ID"           NUMBER(11)     NOT NULL PRIMARY KEY,
    "PASSWORD"     NVARCHAR2(128) NULL,
    "LAST_LOGIN"   TIMESTAMP      NULL,
    "IS_SUPERUSER" NUMBER(1)      NOT NULL CHECK ("IS_SUPERUSER" IN (0, 1)),
    "UEMAIL"       NVARCHAR2(254) NULL UNIQUE,
    "UNAME"        NVARCHAR2(30)  NULL,
    "DATE_JOINED"  TIMESTAMP      NOT NULL,
    "AVATAR"       NVARCHAR2(100) NULL,
    "IS_STAFF"     NUMBER(1)      NOT NULL CHECK ("IS_STAFF" IN (0, 1)),
    "IS_ACTIVE"    NUMBER(1)      NOT NULL CHECK ("IS_ACTIVE" IN (0, 1))
);
CREATE TABLE "LIBRARY_USER_GROUPS"
(
    "ID"       NUMBER(11) NOT NULL PRIMARY KEY,
    "USER_ID"  NUMBER(11) NOT NULL,
    "GROUP_ID" NUMBER(11) NOT NULL
);
CREATE TABLE "LIBRARY_USER_USER_PERMISSIONS"
(
    "ID"            NUMBER(11) NOT NULL PRIMARY KEY,
    "USER_ID"       NUMBER(11) NOT NULL,
    "PERMISSION_ID" NUMBER(11) NOT NULL
);
--
-- Create model Book
--
CREATE TABLE "LIBRARY_BOOK"
(
    "BID"      NUMBER(11)     NOT NULL PRIMARY KEY,
    "BNAME"    NVARCHAR2(10)  NULL,
    "BAUTHOR"  NVARCHAR2(100) NULL,
    "BPUBTIME" DATE           NOT NULL,
    "BPUBCOMP" NVARCHAR2(30)  NULL,
    "BIMAGE"   NVARCHAR2(100) NULL,
    "BSUMMARY" NCLOB          NULL
);
--
-- Create model Bookcopy
--
CREATE TABLE "LIBRARY_BOOKCOPY"
(
    "BCID"    VARCHAR2(32) NOT NULL PRIMARY KEY,
    "STATUS"  NVARCHAR2(1) NULL,
    "BOOK_ID" NUMBER(11)   NOT NULL
);
--
-- Create model Borrow
--
CREATE TABLE "LIBRARY_BORROW"
(
    "BOID"        NUMBER(11)   NOT NULL PRIMARY KEY,
    "LENDDATE"    DATE         NOT NULL,
    "RETURNDATE"  DATE         NOT NULL,
    "ISFINISHED"  NUMBER(1)    NOT NULL CHECK ("ISFINISHED" IN (0, 1)),
    "BOOKCOPY_ID" VARCHAR2(32) NOT NULL,
    "USER_ID"     NUMBER(11)   NOT NULL
);
--
-- Create model Penalty
--
CREATE TABLE "LIBRARY_PENALTY"
(
    "PID"        NUMBER(11)   NOT NULL PRIMARY KEY,
    "PEMONEY"    NUMBER(5, 2) NOT NULL,
    "PEDATE"     DATE         NOT NULL,
    "ISFINISHED" NUMBER(1)    NOT NULL CHECK ("ISFINISHED" IN (0, 1)),
    "BORROW_ID"  NUMBER(11)   NOT NULL UNIQUE,
    "USER_ID"    NUMBER(11)   NOT NULL
);
--
-- Create model Reserve
--
CREATE TABLE "LIBRARY_RESERVE"
(
    "REID"       NUMBER(11) NOT NULL PRIMARY KEY,
    "STARTDATE"  DATE       NOT NULL,
    "ISOURDATED" NUMBER(1)  NOT NULL CHECK ("ISOURDATED" IN (0, 1)),
    "ISFINISHED" NUMBER(1)  NOT NULL CHECK ("ISFINISHED" IN (0, 1)),
    "BOOK_ID"    NUMBER(11) NOT NULL,
    "USER_ID"    NUMBER(11) NOT NULL
);
--
-- Create model Room
--
CREATE TABLE "LIBRARY_ROOM"
(
    "RID"   NUMBER(11)    NOT NULL PRIMARY KEY,
    "RPOS"  NVARCHAR2(30) NULL,
    "RNAME" NVARCHAR2(30) NULL
);
--
-- Add field room to bookcopy
--
ALTER TABLE "LIBRARY_BOOKCOPY"
    ADD "ROOM_ID" NUMBER(11) NULL;

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(1)
    INTO i
    FROM USER_SEQUENCES
    WHERE SEQUENCE_NAME = 'LIBRARY_USER_SQ';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "LIBRARY_USER_SQ"';
    END IF;
END;
/
;

CREATE OR REPLACE TRIGGER "LIBRARY_USER_TR"
    BEFORE INSERT
    ON "LIBRARY_USER"
    FOR EACH ROW
    WHEN (new."ID" IS NULL)
BEGIN
    SELECT "LIBRARY_USER_SQ".nextval
    INTO :new."ID"
    FROM dual;
END;
/
;

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(1)
    INTO i
    FROM USER_SEQUENCES
    WHERE SEQUENCE_NAME = 'LIBRARY_USER_GROUPS_SQ';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "LIBRARY_USER_GROUPS_SQ"';
    END IF;
END;
/
;

CREATE OR REPLACE TRIGGER "LIBRARY_USER_GROUPS_TR"
    BEFORE INSERT
    ON "LIBRARY_USER_GROUPS"
    FOR EACH ROW
    WHEN (new."ID" IS NULL)
BEGIN
    SELECT "LIBRARY_USER_GROUPS_SQ".nextval
    INTO :new."ID"
    FROM dual;
END;
/
;
ALTER TABLE "LIBRARY_USER_GROUPS"
    ADD CONSTRAINT "LIBRARY_U_USER_ID_797CCC7B_F" FOREIGN KEY ("USER_ID") REFERENCES "LIBRARY_USER" ("ID") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "LIBRARY_USER_GROUPS"
    ADD CONSTRAINT "LIBRARY_U_GROUP_ID_A225A4A9_F" FOREIGN KEY ("GROUP_ID") REFERENCES "AUTH_GROUP" ("ID") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "LIBRARY_USER_GROUPS"
    ADD CONSTRAINT "LIBRARY_U_USER_ID_G_89EA2476_U" UNIQUE ("USER_ID", "GROUP_ID");
CREATE INDEX "LIBRARY_US_USER_ID_797CCC7B" ON "LIBRARY_USER_GROUPS" ("USER_ID");
CREATE INDEX "LIBRARY_US_GROUP_ID_A225A4A9" ON "LIBRARY_USER_GROUPS" ("GROUP_ID");

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(1)
    INTO i
    FROM USER_SEQUENCES
    WHERE SEQUENCE_NAME = 'LIBRARY_USER_USER_PERMI6323_SQ';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "LIBRARY_USER_USER_PERMI6323_SQ"';
    END IF;
END;
/
;

CREATE OR REPLACE TRIGGER "LIBRARY_USER_USER_PERMI6323_TR"
    BEFORE INSERT
    ON "LIBRARY_USER_USER_PERMISSIONS"
    FOR EACH ROW
    WHEN (new."ID" IS NULL)
BEGIN
    SELECT "LIBRARY_USER_USER_PERMI6323_SQ".nextval
    INTO :new."ID"
    FROM dual;
END;
/
;
ALTER TABLE "LIBRARY_USER_USER_PERMISSIONS"
    ADD CONSTRAINT "LIBRARY_U_USER_ID_D9D78974_F" FOREIGN KEY ("USER_ID") REFERENCES "LIBRARY_USER" ("ID") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "LIBRARY_USER_USER_PERMISSIONS"
    ADD CONSTRAINT "LIBRARY_U_PERMISSIO_6A5167F4_F" FOREIGN KEY ("PERMISSION_ID") REFERENCES "AUTH_PERMISSION" ("ID") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "LIBRARY_USER_USER_PERMISSIONS"
    ADD CONSTRAINT "LIBRARY_U_USER_ID_P_AED1DF16_U" UNIQUE ("USER_ID", "PERMISSION_ID");
CREATE INDEX "LIBRARY_US_USER_ID_D9D78974" ON "LIBRARY_USER_USER_PERMISSIONS" ("USER_ID");
CREATE INDEX "LIBRARY_US_PERMISSION_6A5167F4" ON "LIBRARY_USER_USER_PERMISSIONS" ("PERMISSION_ID");

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(1)
    INTO i
    FROM USER_SEQUENCES
    WHERE SEQUENCE_NAME = 'LIBRARY_BOOK_SQ';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "LIBRARY_BOOK_SQ"';
    END IF;
END;
/
;

CREATE OR REPLACE TRIGGER "LIBRARY_BOOK_TR"
    BEFORE INSERT
    ON "LIBRARY_BOOK"
    FOR EACH ROW
    WHEN (new."BID" IS NULL)
BEGIN
    SELECT "LIBRARY_BOOK_SQ".nextval
    INTO :new."BID"
    FROM dual;
END;
/
;
ALTER TABLE "LIBRARY_BOOKCOPY"
    ADD CONSTRAINT "LIBRARY_B_BOOK_ID_C433C9C3_F" FOREIGN KEY ("BOOK_ID") REFERENCES "LIBRARY_BOOK" ("BID") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "LIBRARY_BO_BOOK_ID_C433C9C3" ON "LIBRARY_BOOKCOPY" ("BOOK_ID");

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(1)
    INTO i
    FROM USER_SEQUENCES
    WHERE SEQUENCE_NAME = 'LIBRARY_BORROW_SQ';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "LIBRARY_BORROW_SQ"';
    END IF;
END;
/
;

CREATE OR REPLACE TRIGGER "LIBRARY_BORROW_TR"
    BEFORE INSERT
    ON "LIBRARY_BORROW"
    FOR EACH ROW
    WHEN (new."BOID" IS NULL)
BEGIN
    SELECT "LIBRARY_BORROW_SQ".nextval
    INTO :new."BOID"
    FROM dual;
END;
/
;
ALTER TABLE "LIBRARY_BORROW"
    ADD CONSTRAINT "LIBRARY_B_BOOKCOPY__A0A09F67_F" FOREIGN KEY ("BOOKCOPY_ID") REFERENCES "LIBRARY_BOOKCOPY" ("BCID") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "LIBRARY_BORROW"
    ADD CONSTRAINT "LIBRARY_B_USER_ID_C3F288D2_F" FOREIGN KEY ("USER_ID") REFERENCES "LIBRARY_USER" ("ID") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "LIBRARY_BO_BOOKCOPY_I_A0A09F67" ON "LIBRARY_BORROW" ("BOOKCOPY_ID");
CREATE INDEX "LIBRARY_BO_USER_ID_C3F288D2" ON "LIBRARY_BORROW" ("USER_ID");

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(1)
    INTO i
    FROM USER_SEQUENCES
    WHERE SEQUENCE_NAME = 'LIBRARY_PENALTY_SQ';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "LIBRARY_PENALTY_SQ"';
    END IF;
END;
/
;

CREATE OR REPLACE TRIGGER "LIBRARY_PENALTY_TR"
    BEFORE INSERT
    ON "LIBRARY_PENALTY"
    FOR EACH ROW
    WHEN (new."PID" IS NULL)
BEGIN
    SELECT "LIBRARY_PENALTY_SQ".nextval
    INTO :new."PID"
    FROM dual;
END;
/
;
ALTER TABLE "LIBRARY_PENALTY"
    ADD CONSTRAINT "LIBRARY_P_BORROW_ID_F8E0C763_F" FOREIGN KEY ("BORROW_ID") REFERENCES "LIBRARY_BORROW" ("BOID") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "LIBRARY_PENALTY"
    ADD CONSTRAINT "LIBRARY_P_USER_ID_2119BD05_F" FOREIGN KEY ("USER_ID") REFERENCES "LIBRARY_USER" ("ID") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "LIBRARY_PE_USER_ID_2119BD05" ON "LIBRARY_PENALTY" ("USER_ID");

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(1)
    INTO i
    FROM USER_SEQUENCES
    WHERE SEQUENCE_NAME = 'LIBRARY_RESERVE_SQ';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "LIBRARY_RESERVE_SQ"';
    END IF;
END;
/
;

CREATE OR REPLACE TRIGGER "LIBRARY_RESERVE_TR"
    BEFORE INSERT
    ON "LIBRARY_RESERVE"
    FOR EACH ROW
    WHEN (new."REID" IS NULL)
BEGIN
    SELECT "LIBRARY_RESERVE_SQ".nextval
    INTO :new."REID"
    FROM dual;
END;
/
;
ALTER TABLE "LIBRARY_RESERVE"
    ADD CONSTRAINT "LIBRARY_R_BOOK_ID_429E2C6D_F" FOREIGN KEY ("BOOK_ID") REFERENCES "LIBRARY_BOOK" ("BID") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "LIBRARY_RESERVE"
    ADD CONSTRAINT "LIBRARY_R_USER_ID_DA4A2401_F" FOREIGN KEY ("USER_ID") REFERENCES "LIBRARY_USER" ("ID") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "LIBRARY_RE_BOOK_ID_429E2C6D" ON "LIBRARY_RESERVE" ("BOOK_ID");
CREATE INDEX "LIBRARY_RE_USER_ID_DA4A2401" ON "LIBRARY_RESERVE" ("USER_ID");

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(1)
    INTO i
    FROM USER_SEQUENCES
    WHERE SEQUENCE_NAME = 'LIBRARY_ROOM_SQ';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "LIBRARY_ROOM_SQ"';
    END IF;
END;
/
;

CREATE OR REPLACE TRIGGER "LIBRARY_ROOM_TR"
    BEFORE INSERT
    ON "LIBRARY_ROOM"
    FOR EACH ROW
    WHEN (new."RID" IS NULL)
BEGIN
    SELECT "LIBRARY_ROOM_SQ".nextval
    INTO :new."RID"
    FROM dual;
END;
/
;
CREATE INDEX "LIBRARY_BO_ROOM_ID_625623CA" ON "LIBRARY_BOOKCOPY" ("ROOM_ID");
ALTER TABLE "LIBRARY_BOOKCOPY"
    ADD CONSTRAINT "LIBRARY_B_ROOM_ID_625623CA_F" FOREIGN KEY ("ROOM_ID") REFERENCES "LIBRARY_ROOM" ("RID") DEFERRABLE INITIALLY DEFERRED;
COMMIT;
